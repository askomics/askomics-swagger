---
swagger: "2.0"
info:
  description: "Swagger for [AskOmics](https://github.com/askomics/flaskomics) API. Current version: 4.5.0"
  title: "AskOmics Swagger"
  contact:
    email: "askomics@irisa.fr"
  license:
    name: "AGPL-3.0 license"
    url: "https://github.com/askomics/flaskomics#AGPL-3.0-1-ov-file"
host: "test.askomics.org"
basePath: "/api"
tags:
- name: "Start"
  description: "AskOmics instance configuration"
- name: "Files"
  description: "Everything related to files"
- name: "Datasets"
  description: "Everything related to datasets"
- name: "Sparql"
  description: "Everything related to SPARQL queries"
- name: "Results"
  description: "Everything related to results"
- name: "Data"
  description: "Everything related to URI data"
schemes:
- "https"
- "http"
paths:
  /start:
    get:
      tags:
      - "Start"
      summary: "Get starting configuration"
      description: "Get information regarding to AskOmics configuration, and logged user"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful request"
          schema:
            type: "object"
            properties:
              config:
                type: "object"
              error:
                type: boolean
              errorMessage:
                type: string
      security:
      - api_key: []
      - {}
  /files:
    get:
      tags:
      - "Files"
      summary: "Get user files"
      description: "List user files"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful request"
          schema:
            type: "object"
            properties:
              files:
                type: "array"
                items:
                  type: "object"
                  properties:
                    date:
                      type: "integer"
                      description: "Upload date (unix timestamp)"
                    id:
                      type: "integer"
                    name:
                      type: "string"
                      description: "Filename"
                    preview:
                      type: "object"
                      description: "File preview, depends on the type"
                    preview_error:
                      type: "string"
                    size:
                      type: "integer"
                    status:
                      type: "string"
                    type:
                      type: string
                      description: "File type"
              diskSpace:
                type: "integer"
                description: "Remaining available quota"
              error:
                type: boolean
              errorMessage:
                type: string
      security:
      - api_key: []
    post:
      tags:
      - "Files"
      summary: "Get user files"
      description: "List user files, restricted to a list of ids"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name:  filesId
        required: true
      responses:
        200:
          description: "Successful request"
          schema:
            type: "object"
            properties:
              files:
                type: "array"
                items:
                  type: "object"
                  properties:
                    date:
                      type: "integer"
                      description: "Upload date (unix timestamp)"
                    id:
                      type: "integer"
                    name:
                      type: "string"
                      description: "Filename"
                    preview:
                      type: "object"
                      description: "File preview, depends on the type"
                    preview_error:
                      type: "string"
                    size:
                      type: "integer"
                    status:
                      type: "string"
                    type:
                      type: string
                      description: "File type"
              diskSpace:
                type: "integer"
                description: "Remaining available quota"
              error:
                type: boolean
              errorMessage:
                type: string
      security:
      - api_key: []

  /files/editname:
    post:
      tags:
      - "Files"
      summary: "Update file name"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name:  id
        description: "File id"
        required: true
        schema:
          type: integer
      - in: body
        name:  newName
        description: "New file name"
        required: true
        schema:
          type: string
      responses:
        200:
          description: "Successful request"
          schema:
            type: "object"
            properties:
              files:
                type: "array"
                description: "List of user files"
                items:
                  type: "object"
                  properties:
                    date:
                      type: "integer"
                      description: "Upload date (unix timestamp)"
                    id:
                      type: "integer"
                    name:
                      type: "string"
                      description: "Filename"
                    preview:
                      type: "object"
                      description: "File preview, depends on the type"
                    preview_error:
                      type: "string"
                    size:
                      type: "integer"
                    status:
                      type: "string"
                    type:
                      type: string
                      description: "File type"
              diskSpace:
                type: "integer"
                description: "Remaining available quota"
              error:
                type: boolean
              errorMessage:
                type: string
        400:
          description: "Missing parameters"
      security:
      - api_key: []

  /files/upload_chunk:
    post:
      tags:
      - "Files"
      summary: "Update file chunk"
      description: "Endpoint to upload file. Files need to be chunked if > 10Mo. See [here](https://github.com/askomics/askoclics/blob/37c8c854bdddbe15fb247d49aa7e419f22727cd5/askoclics/askolib/file/__init__.py#L34) for an example."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name:  first
        description: "Is this the first chunk"
        schema:
          type: boolean
        required: true
      - in: body
        name:  last
        description: "Is this the last chunk"
        schema:
          type: boolean
        required: true
      - in: body
        name:  size
        description: "File size, in bytes"
        schema:
          type: integer
        required: true
      - in: body
        name:  name
        description: "File name"
        required: true
      - in: body
        name:  type
        description: "File type (as a MIME type)"
        required: true
      - in: body
        name:  chunk
        description: "File chunk"
        required: true
      - in: body
        name:  path
        description: "AskOmics file path, returned after the first query to this endpoint"
        required: false
      responses:
        200:
          description: "Successful request"
          schema:
            type: object
            properties:
              path:
                type: string
                description: "File internal path"
              error:
                type: boolean
              errorMessage:
                type: string
        400:
          description: "Missing parameters or exceeded quota"
      security:
      - api_key: []

  /files/upload_url:
    post:
      tags:
      - "Files"
      summary: "Request upload from a remote url"
      description: "Request a file upload from a remote file link"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name:  url
        description: "Remote url"
        required: true
      responses:
        200:
          description: "Successful request"
          schema:
            type: object
            properties:
              error:
                type: boolean
              errorMessage:
                type: string
        400:
          description: "Missing parameters or exceeded quota"
      security:
      - api_key: []

  /files/preview:
    post:
      tags:
      - "Files"
      summary: "Get files previews"
      description: "Get files previews (response depends on the file type)"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name:  filesId
        description: "Files Ids"
        schema:
          type: array
        required: true
      responses:
        200:
          description: "Successful request"
          schema:
            type: object
            items:
              previewFiles:
                type: array
                description: Array of previews for requested files Ids
              error:
                type: boolean
              errorMessage:
                type: string
        400:
          description: "Missing filesId parameter, or requested files are not integrable"
      security:
      - api_key: []

  /files/delete:
    post:
      tags:
      - "Files"
      summary: "Delete files"
      description: "Delete selected files"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name:  filesIdToDelete
        description: "Files Ids to delete"
        schema:
          type: array
        required: true
      responses:
        200:
          description: "Successful request"
          schema:
            type: object
            items:
              files:
                type: array
                description: Remaining files
              error:
                type: boolean
              errorMessage:
                type: string
        400:
          description: "Missing filesIdToDelete parameter"
      security:
      - api_key: []

  /files/integrate:
    post:
      tags:
      - "Files"
      summary: "Integrate files"
      description: "Integrate selected files"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name:  fileId
        description: "Id of the file to integrate"
        required: true
      - in: body
        name:  public
        description: "Set the dataset public? (Restricted to admin users)"
        schema:
          type: boolean
        required: false
      - in: body
        name:  externalEndpoint
        description: "External endpoint, for RDF files"
        required: false
      - in: body
        name:  externalGraph
        description: "External graph, for RDF files"
        required: false
      - in: body
        name:  customUri
        description: "Custom URI, for non-RDF files"
        required: false
      - in: body
        name:  column_types
        description: "List of column type (for CSV files)"
        schema:
          type: array
        required: false
      - in: body
        name:  header_names
        description: "List of column names (for CSV files)"
        schema:
          type: array
        required: false
      - in: body
        name:  entities
        description: "List of entity names (for GFF files)"
        schema:
          type: array
        required: false
      - in: body
        name:  entity_name
        description: "Entity name (for BED files)"
        required: false
      responses:
        200:
          description: "Successful request"
          schema:
            type: object
            items:
              dataset_ids:
                type: array
                description: Generated dataset ids
              error:
                type: boolean
              errorMessage:
                type: string
        400:
          description: "Missing fileId parameter, or integration disabled in this AskOmics instance"
      security:
      - api_key: []

  /files/ttl/{user_id}/{username}/{path}:
    get:
      tags:
      - "Files"
      summary: "Get a static ttl file"
      description: "Get a downloadable ttl file"
      produces:
      - "application/json"
      parameters:
      - in: path
        name:  user_id
        description: "User ID of the file owner"
        type: string
        required: true
      - in: path
        name:  username
        description: "Username of the file owner"
        type: string
        required: true
      - in: path
        name:  path
        description: "File name to load"
        type: string
        required: true
      - in: query
        name:  key
        description: "API key, passed as a query parameter for virtuoso loading"
        type: string
        required: false
      responses:
        200:
          description: "Successful request"
          content:
            description: "A ttl file"
            schema:
              type: file
        401:
          description: "Login required / invalid account / blocked account"
      security:
      - api_key: []
  /files/colums:
    get:
      tags:
      - "Files"
      summary: "Get available column types for CSV files"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful request"
          schema:
            type: object
            items:
              types:
                type: array
                description: List of column types
  /datasets:
    get:
      tags:
      - "Datasets"
      summary: "Get all datasets for user"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful request"
          schema:
            type: object
            properties:
              datasets:
                description: List of datasets
                schema:
                  type: array
                  items:
                    type: "object"
                    properties:
                      name:
                        type: "string"
                        description: "Dataset name"
                      id:
                        type: "integer"
                        description: "Dataset ID"
                      start:
                        type: "integer"
                        description: "Unix time of the start of the integration"
                      end:
                        type: "integer"
                        description: "Unix time of the end of the integration"
                      exec_time:
                        type: "integer"
                        description: "Integration time"
                      ntriples:
                        type: "integer"
                        description: "Number of generater triples"
                      ontology:
                        type: "integer"
                        description: "Is the dataset an ontology? (0 or 1)"
                      public:
                        type: "boolean"
                        description: "Is the dataset public?"
                      percent:
                        type: "integer"
                        description: "% of the file integrated"
                      status:
                        type: "string"
                        description: "Dataset status"
                      error_message:
                        type: "string"
                        description: "Error message"
                      traceback:
                        type: "string"
              error:
                type: boolean
              errorMessage:
                type: string
  /datasets/delete:
    post:
      tags:
      - "Datasets"
      summary: "Delete datasets"
      description: "Delete selected datasets"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name:  datasetsIdToDelete
        description: "Datasets Ids to delete"
        schema:
          type: array
        required: true
      responses:
        200:
          description: "Successful request"
          schema:
            type: object
            items:
              datasets:
                type: array
                description: Remaining datasets
              error:
                type: boolean
              errorMessage:
                type: string
        400:
          description: "Missing datasetsIdToDelete parameter"
      security:
      - api_key: []

  /datasets/public:
    post:
      tags:
      - "Datasets"
      summary: "Toggle public status of a dataset"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name:  id
        description: "Dataset ID to toggle"
        required: true
      responses:
        200:
          description: "Successful request"
          schema:
            type: object
            items:
              datasets:
                type: array
                description: Array of datasets
              error:
                type: boolean
              errorMessage:
                type: string
        400:
          description: "Incorrect parameters"
      security:
      - api_key: []

securityDefinitions:
  api_key:
    type: "apiKey"
    name: "X-API-KEY"
    in: "header"
